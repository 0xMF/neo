#!/bin/bash
#
#--
#
# Purpose: handles student missions on matrix
# Creator: Mark Fernandes.
# Created: March 25, 2020
# Updated: Apr 09, 2025
# License: MIT

OWNER=mark.fernandes
LOGSD=                  # dir for log files
ITEM=                   # context specific item (section/test/quiz)
TOPIC=                  # topic/section of paper (if any)
WORDS=                  # word count of item

MAILER=                 # ${OWNER}@owner.domain
REPLIER=                # ${USER}@MyOwner.domain

THISDIR=`dirname $(readlink -e $0)`
[[ -e ${THISDIR}/local.default ]] &&  . ${THISDIR}/local.default
if [[ -z ${OWNER} || -z ${LOGSD} || -z ${ITEM} || -z ${MAILER} || -z ${REPLIER} ]]; then
  echo "nothing to do." >&2
  exit 1
fi

#--
# normal use should not need modifications below this line
#--
TIMESTAMP=$(/usr/bin/date +"%Y%m%d_%H:%M%S")
[[ -z ${TOPIC} ]] && logF=${USER}-${TIMESTAMP} || logF=${USER}-${TOPIC}-${TIMESTAMP}

if [[ -d /home/${OWNER}/.neo/${LOGSD}/${ITEM} ]]; then
    cd /home/${OWNER}/.neo/${LOGSD}/${ITEM}
else
   >&2 echo -e "\nERROR: neo cannot save your results."\
               "\n       Email ${MAILER} with this error message.\n"
   exit 1
fi

if /usr/bin/touch ${logF}; then
  /usr/bin/chmod 660 ${logF}
else
   local q=$(whereis quota | cut -d: -f2 | cut -d' ' -f2)
   [ -s $q ] && $q
   unset q

   >&2 echo -e "\nERROR: neo cannot save your results."\
               "\n       Email ${MAILER} with this error message.\n"
   exit 1
fi

if [[ -d all ]]; then
  /usr/bin/cp ${logF} all/${logF}-00
  /usr/bin/chmod 060 all/${logF}-00
fi

# get entire paper or sub-section if it exists
if [[ -d /home/${OWNER}/${VAULT} && -r /home/${OWNER}/${VAULT}/${TOPIC} ]]; then
  WORDS=$(/usr/bin/wc -w /home/${OWNER}/${VAULT}/${TOPIC} | /usr/bin/cut -d' ' -f1)
  /usr/bin/cat /home/${OWNER}/${VAULT}/${TOPIC} >> ${logF}
else
  >&2 echo -e "\nERROR: Invalid setup, so nothing to see here."\
              "\n       Email ${MAILER} with this error message.\n"
  exit 1
fi

if [[ -d all ]]; then
  /usr/bin/cp ${logF} all/${logF}-01
  /usr/bin/chmod 060 all/${logF}-01
fi

#echo "What editior do you wish to edit with? Your choices are:" >&2
echo "What editior do you wish to edit with?" >&2
#echo "     (e)macs" >&2
#echo "     (n)ano" >&2
echo "     (v)im"  >&2
#read -p  "Your choice n or  v: " editor
read -p  "Enter v for vim: " editor

case ${editor} in
    #e) /usr/bin/emacs ${logF} ;;
    #n) /usr/bin/nano ${logF} ;;
    v) /usr/bin/vim ${logF} ;;
    *) >&2 echo -e "\nERROR! No input given or your preferred editor was not an option"\
                   "\n       otherwise email ${MAILER} with this error message.\n" ;
       exit 1 ;;
esac

if [[ -d all ]]; then
  /usr/bin/cp ${logF} all/${logF}
  /usr/bin/chmod 060 all/${logF}
fi

echo >&2

if [[ -n "${FELLOW}" ]]; then
  echo $USER|/usr/bin/grep -e "\." 2>&1 > /dev/null
  if [[ $? -eq 0 ]]; then
    f=$(echo ${MAILER} | /usr/bin/sed 's/'"${OWNER}"'//')
    /usr/bin/mail -s "${LOGSD}-${ITEM} ${TOPIC}: ${USER}" -S replyto="$USER$f" $USER$f < ${logF} 2>/dev/null
  fi
fi

WORDS=$(echo $(( $(/usr/bin/wc -w ${logF}| /usr/bin/cut -d' ' -f1) - $(echo $WORDS))))
/usr/bin/mail -s "${LOGSD}-${ITEM} ${TOPIC}: ${USER}" -S replyto="${REPLIER}" ${MAILER} < ${logF} 2>/dev/null
echo -e "Your submission\n\n\t with approximately $WORDS of your own words\n\t on `date`\n\n was successful." | /usr/bin/mail -s "${LOGSD}-${ITEM}: ${USER}" -S replyto="${REPLIER}" ${REPLIER} ${MAILER} 2>/dev/null

if [[ $? -eq 0 && -s ${logF} ]];
then
    /usr/bin/chmod 060 ${logF}
    [[ $? -eq 0 ]] && { echo "Congratulations!! Your mission was successful." >&2 ; exit ; }
fi

>&2 echo -n "ERROR: Did not finish, contact ${MAILER} with this error message."
